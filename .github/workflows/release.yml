name: release

on:
    push:

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v4
              with:
                submodules: recursive

            - name: install node
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: Cache node dependencies
              uses: actions/cache@v4
              env:
                  cache-name: cache-dependencies
              with:
                  path: |
                      ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - name: install node dependencies
              run: npm install

            - name: build
              run: npm run build

    release:
        runs-on: ubuntu-latest
        needs: test
        # only trigger when tagged with a version
        if: startsWith(github.event.ref, 'refs/tags/v')
        steps:
            - name: checkout
              uses: actions/checkout@v4
              with:
                submodules: recursive

            - name: install node
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: Cache node dependencies
              uses: actions/cache@v4
              env:
                  cache-name: cache-dependencies
              with:
                  path: |
                      ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - name: install node dependencies
              run: npm install

            - name: build
              run: npm run build

            - name: release
              run: |
                  npm run release -- --no-increment --no-git --github.release --ci --VV
                  sleep 1s
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: upload update.json
              uses: actions/github-script@v7
              env:
                FILES: build/update*.json
                ARTEFACT_NAME_INPUT: "${{ inputs.artefactName }}"
              with:
                releaseTag: 'update'
                debug: true
                script: |
                  const path = require('path');
                  const fs = require('fs');

                  const __dirname = path.resolve()
          
                  console.log('searching for release...')
                  var { data: release } = await github.rest.repos.getReleaseByTag({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      tag: '${{releaseTag}}'
                  });
                  
                  console.log("found release " + release.name)

                  console.log('doing globbing option');
                  const globOptions = {
                      followSymbolicLinks: 'FALSE'
                  }
                  const files = process.env.FILES.split(os.EOL);
                  const globber = await glob.create(files.join('\n'), globOptions)

                  for await (const file of globber.globGenerator()) {
                    console.log(file)
                    fs.readFile(file, 'utf8', (err, data) => {
                      if (err) {
                          console.error(err);
                          return;
                      }
                      
                      const fileName = file.split("/").pop();
                      const asset = release.assets.filter(asset=>asset.name == fileName);
                      if(asset.length > 0){
                        github.rest.repos.deleteReleaseAsset({
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            asset_id: asset.id
                        });                  
                      }
                      
                      console.log('write to '+ release.id)
                      github.rest.repos.uploadReleaseAsset({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          release_id: release.id,
                          name: fileName,
                          data: data
                      });
                    });
                  }

            - name: Notify release
              uses: apexskier/github-release-commenter@v1
              continue-on-error: true
              with:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  comment-template: |
                      :rocket: _This ticket has been resolved in {release_tag}. See {release_link} for release notes._

